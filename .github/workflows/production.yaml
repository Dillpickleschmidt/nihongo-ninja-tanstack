name: Production Deploy via SST to AWS

on:
  pull_request:
    branches:
      - "production"
    types:
      - closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Cache TanStack Start Build
        uses: actions/cache@v4
        with:
          path: |
            .nitro/
            .output/
            .sst/
            .tanstack/
          key: cache-${{ hashFiles('**/bun.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            cache-${{ hashFiles('**/bun.lock') }}-
      - name: Install Bun
        run: npm install -g bun

      - name: Install projects deps
        run: bun install

      - name: Install AWS Creds
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Set SST Config Secret
        run: |
          bunx sst secret set SUPABASE_URL '${{ secrets.SUPABASE_URL_PRODUCTION }}' --stage production
          bunx sst secret set SUPABASE_PUBLISHABLE_OR_ANON_KEY '${{ secrets.SUPABASE_PUBLISHABLE_OR_ANON_KEY_PRODUCTION }}' --stage production
          bunx sst secret set SECRET_VAL '${{ secrets.SECRET_VAL }}' --stage production
          bunx sst secret set COMMIT_SHA '${{ github.sha }}' --stage production

      - name: Run Supabase Migrations
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD_PRODUCTION }}
          SUPABASE_PROJECT_ID: euuaaplajcanxlznhooy
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID --password $SUPABASE_DB_PASSWORD
          supabase db push

      - name: Deploy to AWS with SST
        run: bun run deploy-prod
        env:
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          VITE_POSTHOG_KEY: ${{ secrets.POSTHOG_KEY }}
          VITE_POSTHOG_HOST: ${{ secrets.POSTHOG_HOST }}

      - name: Clean Up AWS Profile
        run: |
          rm -rf ~/.aws
