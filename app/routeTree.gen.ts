/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as LearnImport } from './routes/_learn'
import { Route as IndexImport } from './routes/index'
import { Route as LearnLearnImport } from './routes/_learn/learn'
import { Route as LearnDashboardImport } from './routes/_learn/dashboard'
import { Route as LearnLearnIndexImport } from './routes/_learn/learn/index'
import { Route as LearnLearnVocabularyImport } from './routes/_learn/learn/vocabulary'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const LearnRoute = LearnImport.update({
  id: '/_learn',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LearnLearnRoute = LearnLearnImport.update({
  id: '/learn',
  path: '/learn',
  getParentRoute: () => LearnRoute,
} as any)

const LearnDashboardRoute = LearnDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LearnRoute,
} as any)

const LearnLearnIndexRoute = LearnLearnIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LearnLearnRoute,
} as any)

const LearnLearnVocabularyRoute = LearnLearnVocabularyImport.update({
  id: '/vocabulary',
  path: '/vocabulary',
  getParentRoute: () => LearnLearnRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_learn': {
      id: '/_learn'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LearnImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_learn/dashboard': {
      id: '/_learn/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LearnDashboardImport
      parentRoute: typeof LearnImport
    }
    '/_learn/learn': {
      id: '/_learn/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LearnLearnImport
      parentRoute: typeof LearnImport
    }
    '/_learn/learn/vocabulary': {
      id: '/_learn/learn/vocabulary'
      path: '/vocabulary'
      fullPath: '/learn/vocabulary'
      preLoaderRoute: typeof LearnLearnVocabularyImport
      parentRoute: typeof LearnLearnImport
    }
    '/_learn/learn/': {
      id: '/_learn/learn/'
      path: '/'
      fullPath: '/learn/'
      preLoaderRoute: typeof LearnLearnIndexImport
      parentRoute: typeof LearnLearnImport
    }
  }
}

// Create and export the route tree

interface LearnLearnRouteChildren {
  LearnLearnVocabularyRoute: typeof LearnLearnVocabularyRoute
  LearnLearnIndexRoute: typeof LearnLearnIndexRoute
}

const LearnLearnRouteChildren: LearnLearnRouteChildren = {
  LearnLearnVocabularyRoute: LearnLearnVocabularyRoute,
  LearnLearnIndexRoute: LearnLearnIndexRoute,
}

const LearnLearnRouteWithChildren = LearnLearnRoute._addFileChildren(
  LearnLearnRouteChildren,
)

interface LearnRouteChildren {
  LearnDashboardRoute: typeof LearnDashboardRoute
  LearnLearnRoute: typeof LearnLearnRouteWithChildren
}

const LearnRouteChildren: LearnRouteChildren = {
  LearnDashboardRoute: LearnDashboardRoute,
  LearnLearnRoute: LearnLearnRouteWithChildren,
}

const LearnRouteWithChildren = LearnRoute._addFileChildren(LearnRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LearnRouteWithChildren
  '/auth': typeof AuthRoute
  '/dashboard': typeof LearnDashboardRoute
  '/learn': typeof LearnLearnRouteWithChildren
  '/learn/vocabulary': typeof LearnLearnVocabularyRoute
  '/learn/': typeof LearnLearnIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LearnRouteWithChildren
  '/auth': typeof AuthRoute
  '/dashboard': typeof LearnDashboardRoute
  '/learn/vocabulary': typeof LearnLearnVocabularyRoute
  '/learn': typeof LearnLearnIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_learn': typeof LearnRouteWithChildren
  '/auth': typeof AuthRoute
  '/_learn/dashboard': typeof LearnDashboardRoute
  '/_learn/learn': typeof LearnLearnRouteWithChildren
  '/_learn/learn/vocabulary': typeof LearnLearnVocabularyRoute
  '/_learn/learn/': typeof LearnLearnIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/auth'
    | '/dashboard'
    | '/learn'
    | '/learn/vocabulary'
    | '/learn/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/auth' | '/dashboard' | '/learn/vocabulary' | '/learn'
  id:
    | '__root__'
    | '/'
    | '/_learn'
    | '/auth'
    | '/_learn/dashboard'
    | '/_learn/learn'
    | '/_learn/learn/vocabulary'
    | '/_learn/learn/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LearnRoute: typeof LearnRouteWithChildren
  AuthRoute: typeof AuthRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LearnRoute: LearnRouteWithChildren,
  AuthRoute: AuthRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_learn",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_learn": {
      "filePath": "_learn.tsx",
      "children": [
        "/_learn/dashboard",
        "/_learn/learn"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/_learn/dashboard": {
      "filePath": "_learn/dashboard.tsx",
      "parent": "/_learn"
    },
    "/_learn/learn": {
      "filePath": "_learn/learn.tsx",
      "parent": "/_learn",
      "children": [
        "/_learn/learn/vocabulary",
        "/_learn/learn/"
      ]
    },
    "/_learn/learn/vocabulary": {
      "filePath": "_learn/learn/vocabulary.tsx",
      "parent": "/_learn/learn"
    },
    "/_learn/learn/": {
      "filePath": "_learn/learn/index.tsx",
      "parent": "/_learn/learn"
    }
  }
}
ROUTE_MANIFEST_END */
