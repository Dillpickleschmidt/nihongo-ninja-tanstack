/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/solid-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as LessonsRouteImport } from './routes/lessons'
import { Route as KanjiTestRouteImport } from './routes/kanji-test'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as HomeRouteImport } from './routes/_home'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PracticeReviewRouteImport } from './routes/practice/review'
import { Route as PracticeHiraganaQuizRouteImport } from './routes/practice/hiragana-quiz'
import { Route as PracticeDakutenHandakutenQuizRouteImport } from './routes/practice/dakuten-handakuten-quiz'
import { Route as PracticeContractedSoundsQuizRouteImport } from './routes/practice/contracted-sounds-quiz'
import { Route as PracticeAllHiraganaQuizRouteImport } from './routes/practice/all-hiragana-quiz'
import { Route as PracticePracticeIDRouteImport } from './routes/practice/$practiceID'
import { Route as HomeVocabRouteImport } from './routes/_home/vocab'
import { Route as HomeProfileRouteImport } from './routes/_home/profile'
import { Route as HomeGuidesRouteImport } from './routes/_home/guides'
import { Route as HomeGrammarNotesRouteImport } from './routes/_home/grammar-notes'
import { Route as HomeDashboardRouteImport } from './routes/_home/dashboard'
import { Route as HomeLearnIndexRouteImport } from './routes/_home/learn/index'
import { Route as PracticeUserIDDeckIDRouteImport } from './routes/practice/$userID.$deckID'
import { Route as LessonsChapter2KatakanaRouteImport } from './routes/lessons/_chapter-2/katakana'
import { Route as LessonsChapter1XWaYDesuRouteImport } from './routes/lessons/_chapter-1/x-wa-y-desu'
import { Route as LessonsChapter1UsefulExpressionsRouteImport } from './routes/lessons/_chapter-1/useful-expressions'
import { Route as LessonsChapter1TheNoParticleRouteImport } from './routes/lessons/_chapter-1/the-no-particle'
import { Route as LessonsChapter1TellingTimeRouteImport } from './routes/lessons/_chapter-1/telling-time'
import { Route as LessonsChapter1SelfIntroductionsRouteImport } from './routes/lessons/_chapter-1/self-introductions'
import { Route as LessonsChapter1SayingYouInJapaneseRouteImport } from './routes/lessons/_chapter-1/saying-you-in-japanese'
import { Route as LessonsChapter1QuestionsWithKaRouteImport } from './routes/lessons/_chapter-1/questions-with-ka'
import { Route as LessonsChapter1MinutesRouteImport } from './routes/lessons/_chapter-1/minutes'
import { Route as LessonsChapter1JapaneseNamesHonorificsRouteImport } from './routes/lessons/_chapter-1/japanese-names-honorifics'
import { Route as LessonsChapter1AnouEttoRouteImport } from './routes/lessons/_chapter-1/anou-etto'
import { Route as LessonsChapter0WritingSystemsRouteImport } from './routes/lessons/_chapter-0/writing-systems'
import { Route as LessonsChapter0WelcomeOverviewRouteImport } from './routes/lessons/_chapter-0/welcome-overview'
import { Route as LessonsChapter0PunctuationMiscRouteImport } from './routes/lessons/_chapter-0/punctuation-misc'
import { Route as LessonsChapter0Numbers0100RouteImport } from './routes/lessons/_chapter-0/numbers-0-100'
import { Route as LessonsChapter0LongVowelsPausedConsonantsRouteImport } from './routes/lessons/_chapter-0/long-vowels-paused-consonants'
import { Route as LessonsChapter0JapanesePronunciationRouteImport } from './routes/lessons/_chapter-0/japanese-pronunciation'
import { Route as LessonsChapter0HiraganaRouteImport } from './routes/lessons/_chapter-0/hiragana'
import { Route as LessonsChapter0GreetingsRouteImport } from './routes/lessons/_chapter-0/greetings'
import { Route as LessonsChapter0DakutenHandakutenRouteImport } from './routes/lessons/_chapter-0/dakuten-handakuten'
import { Route as LessonsChapter0ContractedSoundsRouteImport } from './routes/lessons/_chapter-0/contracted-sounds'
import { Route as LessonsChapter0CommonExpressionsRouteImport } from './routes/lessons/_chapter-0/common-expressions'
import { Route as HomePracticeSentencePracticeRouteImport } from './routes/_home/practice/sentence-practice'
import { Route as HomePracticeConjugationRouteImport } from './routes/_home/practice/conjugation'
import { Route as HomeGuidesSrsRouteImport } from './routes/_home/guides/srs'
import { Route as HomeLearnTextbookIdChapterSlugRouteImport } from './routes/_home/learn/$textbookId.$chapterSlug'
import { ServerRoute as ApiUploadOverrideServerRouteImport } from './routes/api/upload-override'
import { ServerRoute as ApiHelloServerRouteImport } from './routes/api/hello'
import { ServerRoute as ApiAuthLogoutServerRouteImport } from './routes/api/auth/logout'
import { ServerRoute as ApiAuthLoginServerRouteImport } from './routes/api/auth/login'

const rootServerRouteImport = createServerRootRoute()

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const LessonsRoute = LessonsRouteImport.update({
  id: '/lessons',
  path: '/lessons',
  getParentRoute: () => rootRouteImport,
} as any)
const KanjiTestRoute = KanjiTestRouteImport.update({
  id: '/kanji-test',
  path: '/kanji-test',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/_home',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PracticeReviewRoute = PracticeReviewRouteImport.update({
  id: '/practice/review',
  path: '/practice/review',
  getParentRoute: () => rootRouteImport,
} as any)
const PracticeHiraganaQuizRoute = PracticeHiraganaQuizRouteImport.update({
  id: '/practice/hiragana-quiz',
  path: '/practice/hiragana-quiz',
  getParentRoute: () => rootRouteImport,
} as any)
const PracticeDakutenHandakutenQuizRoute =
  PracticeDakutenHandakutenQuizRouteImport.update({
    id: '/practice/dakuten-handakuten-quiz',
    path: '/practice/dakuten-handakuten-quiz',
    getParentRoute: () => rootRouteImport,
  } as any)
const PracticeContractedSoundsQuizRoute =
  PracticeContractedSoundsQuizRouteImport.update({
    id: '/practice/contracted-sounds-quiz',
    path: '/practice/contracted-sounds-quiz',
    getParentRoute: () => rootRouteImport,
  } as any)
const PracticeAllHiraganaQuizRoute = PracticeAllHiraganaQuizRouteImport.update({
  id: '/practice/all-hiragana-quiz',
  path: '/practice/all-hiragana-quiz',
  getParentRoute: () => rootRouteImport,
} as any)
const PracticePracticeIDRoute = PracticePracticeIDRouteImport.update({
  id: '/practice/$practiceID',
  path: '/practice/$practiceID',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeVocabRoute = HomeVocabRouteImport.update({
  id: '/vocab',
  path: '/vocab',
  getParentRoute: () => HomeRoute,
} as any)
const HomeProfileRoute = HomeProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => HomeRoute,
} as any)
const HomeGuidesRoute = HomeGuidesRouteImport.update({
  id: '/guides',
  path: '/guides',
  getParentRoute: () => HomeRoute,
} as any)
const HomeGrammarNotesRoute = HomeGrammarNotesRouteImport.update({
  id: '/grammar-notes',
  path: '/grammar-notes',
  getParentRoute: () => HomeRoute,
} as any)
const HomeDashboardRoute = HomeDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => HomeRoute,
} as any)
const HomeLearnIndexRoute = HomeLearnIndexRouteImport.update({
  id: '/learn/',
  path: '/learn/',
  getParentRoute: () => HomeRoute,
} as any)
const PracticeUserIDDeckIDRoute = PracticeUserIDDeckIDRouteImport.update({
  id: '/practice/$userID/$deckID',
  path: '/practice/$userID/$deckID',
  getParentRoute: () => rootRouteImport,
} as any)
const LessonsChapter2KatakanaRoute = LessonsChapter2KatakanaRouteImport.update({
  id: '/_chapter-2/katakana',
  path: '/katakana',
  getParentRoute: () => LessonsRoute,
} as any)
const LessonsChapter1XWaYDesuRoute = LessonsChapter1XWaYDesuRouteImport.update({
  id: '/_chapter-1/x-wa-y-desu',
  path: '/x-wa-y-desu',
  getParentRoute: () => LessonsRoute,
} as any)
const LessonsChapter1UsefulExpressionsRoute =
  LessonsChapter1UsefulExpressionsRouteImport.update({
    id: '/_chapter-1/useful-expressions',
    path: '/useful-expressions',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter1TheNoParticleRoute =
  LessonsChapter1TheNoParticleRouteImport.update({
    id: '/_chapter-1/the-no-particle',
    path: '/the-no-particle',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter1TellingTimeRoute =
  LessonsChapter1TellingTimeRouteImport.update({
    id: '/_chapter-1/telling-time',
    path: '/telling-time',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter1SelfIntroductionsRoute =
  LessonsChapter1SelfIntroductionsRouteImport.update({
    id: '/_chapter-1/self-introductions',
    path: '/self-introductions',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter1SayingYouInJapaneseRoute =
  LessonsChapter1SayingYouInJapaneseRouteImport.update({
    id: '/_chapter-1/saying-you-in-japanese',
    path: '/saying-you-in-japanese',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter1QuestionsWithKaRoute =
  LessonsChapter1QuestionsWithKaRouteImport.update({
    id: '/_chapter-1/questions-with-ka',
    path: '/questions-with-ka',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter1MinutesRoute = LessonsChapter1MinutesRouteImport.update({
  id: '/_chapter-1/minutes',
  path: '/minutes',
  getParentRoute: () => LessonsRoute,
} as any)
const LessonsChapter1JapaneseNamesHonorificsRoute =
  LessonsChapter1JapaneseNamesHonorificsRouteImport.update({
    id: '/_chapter-1/japanese-names-honorifics',
    path: '/japanese-names-honorifics',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter1AnouEttoRoute = LessonsChapter1AnouEttoRouteImport.update({
  id: '/_chapter-1/anou-etto',
  path: '/anou-etto',
  getParentRoute: () => LessonsRoute,
} as any)
const LessonsChapter0WritingSystemsRoute =
  LessonsChapter0WritingSystemsRouteImport.update({
    id: '/_chapter-0/writing-systems',
    path: '/writing-systems',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter0WelcomeOverviewRoute =
  LessonsChapter0WelcomeOverviewRouteImport.update({
    id: '/_chapter-0/welcome-overview',
    path: '/welcome-overview',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter0PunctuationMiscRoute =
  LessonsChapter0PunctuationMiscRouteImport.update({
    id: '/_chapter-0/punctuation-misc',
    path: '/punctuation-misc',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter0Numbers0100Route =
  LessonsChapter0Numbers0100RouteImport.update({
    id: '/_chapter-0/numbers-0-100',
    path: '/numbers-0-100',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter0LongVowelsPausedConsonantsRoute =
  LessonsChapter0LongVowelsPausedConsonantsRouteImport.update({
    id: '/_chapter-0/long-vowels-paused-consonants',
    path: '/long-vowels-paused-consonants',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter0JapanesePronunciationRoute =
  LessonsChapter0JapanesePronunciationRouteImport.update({
    id: '/_chapter-0/japanese-pronunciation',
    path: '/japanese-pronunciation',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter0HiraganaRoute = LessonsChapter0HiraganaRouteImport.update({
  id: '/_chapter-0/hiragana',
  path: '/hiragana',
  getParentRoute: () => LessonsRoute,
} as any)
const LessonsChapter0GreetingsRoute =
  LessonsChapter0GreetingsRouteImport.update({
    id: '/_chapter-0/greetings',
    path: '/greetings',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter0DakutenHandakutenRoute =
  LessonsChapter0DakutenHandakutenRouteImport.update({
    id: '/_chapter-0/dakuten-handakuten',
    path: '/dakuten-handakuten',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter0ContractedSoundsRoute =
  LessonsChapter0ContractedSoundsRouteImport.update({
    id: '/_chapter-0/contracted-sounds',
    path: '/contracted-sounds',
    getParentRoute: () => LessonsRoute,
  } as any)
const LessonsChapter0CommonExpressionsRoute =
  LessonsChapter0CommonExpressionsRouteImport.update({
    id: '/_chapter-0/common-expressions',
    path: '/common-expressions',
    getParentRoute: () => LessonsRoute,
  } as any)
const HomePracticeSentencePracticeRoute =
  HomePracticeSentencePracticeRouteImport.update({
    id: '/practice/sentence-practice',
    path: '/practice/sentence-practice',
    getParentRoute: () => HomeRoute,
  } as any)
const HomePracticeConjugationRoute = HomePracticeConjugationRouteImport.update({
  id: '/practice/conjugation',
  path: '/practice/conjugation',
  getParentRoute: () => HomeRoute,
} as any)
const HomeGuidesSrsRoute = HomeGuidesSrsRouteImport.update({
  id: '/srs',
  path: '/srs',
  getParentRoute: () => HomeGuidesRoute,
} as any)
const HomeLearnTextbookIdChapterSlugRoute =
  HomeLearnTextbookIdChapterSlugRouteImport.update({
    id: '/learn/$textbookId/$chapterSlug',
    path: '/learn/$textbookId/$chapterSlug',
    getParentRoute: () => HomeRoute,
  } as any)
const ApiUploadOverrideServerRoute = ApiUploadOverrideServerRouteImport.update({
  id: '/api/upload-override',
  path: '/api/upload-override',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiHelloServerRoute = ApiHelloServerRouteImport.update({
  id: '/api/hello',
  path: '/api/hello',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthLogoutServerRoute = ApiAuthLogoutServerRouteImport.update({
  id: '/api/auth/logout',
  path: '/api/auth/logout',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthLoginServerRoute = ApiAuthLoginServerRouteImport.update({
  id: '/api/auth/login',
  path: '/api/auth/login',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/kanji-test': typeof KanjiTestRoute
  '/lessons': typeof LessonsRouteWithChildren
  '/pricing': typeof PricingRoute
  '/settings': typeof SettingsRoute
  '/dashboard': typeof HomeDashboardRoute
  '/grammar-notes': typeof HomeGrammarNotesRoute
  '/guides': typeof HomeGuidesRouteWithChildren
  '/profile': typeof HomeProfileRoute
  '/vocab': typeof HomeVocabRoute
  '/practice/$practiceID': typeof PracticePracticeIDRoute
  '/practice/all-hiragana-quiz': typeof PracticeAllHiraganaQuizRoute
  '/practice/contracted-sounds-quiz': typeof PracticeContractedSoundsQuizRoute
  '/practice/dakuten-handakuten-quiz': typeof PracticeDakutenHandakutenQuizRoute
  '/practice/hiragana-quiz': typeof PracticeHiraganaQuizRoute
  '/practice/review': typeof PracticeReviewRoute
  '/guides/srs': typeof HomeGuidesSrsRoute
  '/practice/conjugation': typeof HomePracticeConjugationRoute
  '/practice/sentence-practice': typeof HomePracticeSentencePracticeRoute
  '/lessons/common-expressions': typeof LessonsChapter0CommonExpressionsRoute
  '/lessons/contracted-sounds': typeof LessonsChapter0ContractedSoundsRoute
  '/lessons/dakuten-handakuten': typeof LessonsChapter0DakutenHandakutenRoute
  '/lessons/greetings': typeof LessonsChapter0GreetingsRoute
  '/lessons/hiragana': typeof LessonsChapter0HiraganaRoute
  '/lessons/japanese-pronunciation': typeof LessonsChapter0JapanesePronunciationRoute
  '/lessons/long-vowels-paused-consonants': typeof LessonsChapter0LongVowelsPausedConsonantsRoute
  '/lessons/numbers-0-100': typeof LessonsChapter0Numbers0100Route
  '/lessons/punctuation-misc': typeof LessonsChapter0PunctuationMiscRoute
  '/lessons/welcome-overview': typeof LessonsChapter0WelcomeOverviewRoute
  '/lessons/writing-systems': typeof LessonsChapter0WritingSystemsRoute
  '/lessons/anou-etto': typeof LessonsChapter1AnouEttoRoute
  '/lessons/japanese-names-honorifics': typeof LessonsChapter1JapaneseNamesHonorificsRoute
  '/lessons/minutes': typeof LessonsChapter1MinutesRoute
  '/lessons/questions-with-ka': typeof LessonsChapter1QuestionsWithKaRoute
  '/lessons/saying-you-in-japanese': typeof LessonsChapter1SayingYouInJapaneseRoute
  '/lessons/self-introductions': typeof LessonsChapter1SelfIntroductionsRoute
  '/lessons/telling-time': typeof LessonsChapter1TellingTimeRoute
  '/lessons/the-no-particle': typeof LessonsChapter1TheNoParticleRoute
  '/lessons/useful-expressions': typeof LessonsChapter1UsefulExpressionsRoute
  '/lessons/x-wa-y-desu': typeof LessonsChapter1XWaYDesuRoute
  '/lessons/katakana': typeof LessonsChapter2KatakanaRoute
  '/practice/$userID/$deckID': typeof PracticeUserIDDeckIDRoute
  '/learn': typeof HomeLearnIndexRoute
  '/learn/$textbookId/$chapterSlug': typeof HomeLearnTextbookIdChapterSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/kanji-test': typeof KanjiTestRoute
  '/lessons': typeof LessonsRouteWithChildren
  '/pricing': typeof PricingRoute
  '/settings': typeof SettingsRoute
  '/dashboard': typeof HomeDashboardRoute
  '/grammar-notes': typeof HomeGrammarNotesRoute
  '/guides': typeof HomeGuidesRouteWithChildren
  '/profile': typeof HomeProfileRoute
  '/vocab': typeof HomeVocabRoute
  '/practice/$practiceID': typeof PracticePracticeIDRoute
  '/practice/all-hiragana-quiz': typeof PracticeAllHiraganaQuizRoute
  '/practice/contracted-sounds-quiz': typeof PracticeContractedSoundsQuizRoute
  '/practice/dakuten-handakuten-quiz': typeof PracticeDakutenHandakutenQuizRoute
  '/practice/hiragana-quiz': typeof PracticeHiraganaQuizRoute
  '/practice/review': typeof PracticeReviewRoute
  '/guides/srs': typeof HomeGuidesSrsRoute
  '/practice/conjugation': typeof HomePracticeConjugationRoute
  '/practice/sentence-practice': typeof HomePracticeSentencePracticeRoute
  '/lessons/common-expressions': typeof LessonsChapter0CommonExpressionsRoute
  '/lessons/contracted-sounds': typeof LessonsChapter0ContractedSoundsRoute
  '/lessons/dakuten-handakuten': typeof LessonsChapter0DakutenHandakutenRoute
  '/lessons/greetings': typeof LessonsChapter0GreetingsRoute
  '/lessons/hiragana': typeof LessonsChapter0HiraganaRoute
  '/lessons/japanese-pronunciation': typeof LessonsChapter0JapanesePronunciationRoute
  '/lessons/long-vowels-paused-consonants': typeof LessonsChapter0LongVowelsPausedConsonantsRoute
  '/lessons/numbers-0-100': typeof LessonsChapter0Numbers0100Route
  '/lessons/punctuation-misc': typeof LessonsChapter0PunctuationMiscRoute
  '/lessons/welcome-overview': typeof LessonsChapter0WelcomeOverviewRoute
  '/lessons/writing-systems': typeof LessonsChapter0WritingSystemsRoute
  '/lessons/anou-etto': typeof LessonsChapter1AnouEttoRoute
  '/lessons/japanese-names-honorifics': typeof LessonsChapter1JapaneseNamesHonorificsRoute
  '/lessons/minutes': typeof LessonsChapter1MinutesRoute
  '/lessons/questions-with-ka': typeof LessonsChapter1QuestionsWithKaRoute
  '/lessons/saying-you-in-japanese': typeof LessonsChapter1SayingYouInJapaneseRoute
  '/lessons/self-introductions': typeof LessonsChapter1SelfIntroductionsRoute
  '/lessons/telling-time': typeof LessonsChapter1TellingTimeRoute
  '/lessons/the-no-particle': typeof LessonsChapter1TheNoParticleRoute
  '/lessons/useful-expressions': typeof LessonsChapter1UsefulExpressionsRoute
  '/lessons/x-wa-y-desu': typeof LessonsChapter1XWaYDesuRoute
  '/lessons/katakana': typeof LessonsChapter2KatakanaRoute
  '/practice/$userID/$deckID': typeof PracticeUserIDDeckIDRoute
  '/learn': typeof HomeLearnIndexRoute
  '/learn/$textbookId/$chapterSlug': typeof HomeLearnTextbookIdChapterSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_home': typeof HomeRouteWithChildren
  '/auth': typeof AuthRoute
  '/kanji-test': typeof KanjiTestRoute
  '/lessons': typeof LessonsRouteWithChildren
  '/pricing': typeof PricingRoute
  '/settings': typeof SettingsRoute
  '/_home/dashboard': typeof HomeDashboardRoute
  '/_home/grammar-notes': typeof HomeGrammarNotesRoute
  '/_home/guides': typeof HomeGuidesRouteWithChildren
  '/_home/profile': typeof HomeProfileRoute
  '/_home/vocab': typeof HomeVocabRoute
  '/practice/$practiceID': typeof PracticePracticeIDRoute
  '/practice/all-hiragana-quiz': typeof PracticeAllHiraganaQuizRoute
  '/practice/contracted-sounds-quiz': typeof PracticeContractedSoundsQuizRoute
  '/practice/dakuten-handakuten-quiz': typeof PracticeDakutenHandakutenQuizRoute
  '/practice/hiragana-quiz': typeof PracticeHiraganaQuizRoute
  '/practice/review': typeof PracticeReviewRoute
  '/_home/guides/srs': typeof HomeGuidesSrsRoute
  '/_home/practice/conjugation': typeof HomePracticeConjugationRoute
  '/_home/practice/sentence-practice': typeof HomePracticeSentencePracticeRoute
  '/lessons/_chapter-0/common-expressions': typeof LessonsChapter0CommonExpressionsRoute
  '/lessons/_chapter-0/contracted-sounds': typeof LessonsChapter0ContractedSoundsRoute
  '/lessons/_chapter-0/dakuten-handakuten': typeof LessonsChapter0DakutenHandakutenRoute
  '/lessons/_chapter-0/greetings': typeof LessonsChapter0GreetingsRoute
  '/lessons/_chapter-0/hiragana': typeof LessonsChapter0HiraganaRoute
  '/lessons/_chapter-0/japanese-pronunciation': typeof LessonsChapter0JapanesePronunciationRoute
  '/lessons/_chapter-0/long-vowels-paused-consonants': typeof LessonsChapter0LongVowelsPausedConsonantsRoute
  '/lessons/_chapter-0/numbers-0-100': typeof LessonsChapter0Numbers0100Route
  '/lessons/_chapter-0/punctuation-misc': typeof LessonsChapter0PunctuationMiscRoute
  '/lessons/_chapter-0/welcome-overview': typeof LessonsChapter0WelcomeOverviewRoute
  '/lessons/_chapter-0/writing-systems': typeof LessonsChapter0WritingSystemsRoute
  '/lessons/_chapter-1/anou-etto': typeof LessonsChapter1AnouEttoRoute
  '/lessons/_chapter-1/japanese-names-honorifics': typeof LessonsChapter1JapaneseNamesHonorificsRoute
  '/lessons/_chapter-1/minutes': typeof LessonsChapter1MinutesRoute
  '/lessons/_chapter-1/questions-with-ka': typeof LessonsChapter1QuestionsWithKaRoute
  '/lessons/_chapter-1/saying-you-in-japanese': typeof LessonsChapter1SayingYouInJapaneseRoute
  '/lessons/_chapter-1/self-introductions': typeof LessonsChapter1SelfIntroductionsRoute
  '/lessons/_chapter-1/telling-time': typeof LessonsChapter1TellingTimeRoute
  '/lessons/_chapter-1/the-no-particle': typeof LessonsChapter1TheNoParticleRoute
  '/lessons/_chapter-1/useful-expressions': typeof LessonsChapter1UsefulExpressionsRoute
  '/lessons/_chapter-1/x-wa-y-desu': typeof LessonsChapter1XWaYDesuRoute
  '/lessons/_chapter-2/katakana': typeof LessonsChapter2KatakanaRoute
  '/practice/$userID/$deckID': typeof PracticeUserIDDeckIDRoute
  '/_home/learn/': typeof HomeLearnIndexRoute
  '/_home/learn/$textbookId/$chapterSlug': typeof HomeLearnTextbookIdChapterSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/kanji-test'
    | '/lessons'
    | '/pricing'
    | '/settings'
    | '/dashboard'
    | '/grammar-notes'
    | '/guides'
    | '/profile'
    | '/vocab'
    | '/practice/$practiceID'
    | '/practice/all-hiragana-quiz'
    | '/practice/contracted-sounds-quiz'
    | '/practice/dakuten-handakuten-quiz'
    | '/practice/hiragana-quiz'
    | '/practice/review'
    | '/guides/srs'
    | '/practice/conjugation'
    | '/practice/sentence-practice'
    | '/lessons/common-expressions'
    | '/lessons/contracted-sounds'
    | '/lessons/dakuten-handakuten'
    | '/lessons/greetings'
    | '/lessons/hiragana'
    | '/lessons/japanese-pronunciation'
    | '/lessons/long-vowels-paused-consonants'
    | '/lessons/numbers-0-100'
    | '/lessons/punctuation-misc'
    | '/lessons/welcome-overview'
    | '/lessons/writing-systems'
    | '/lessons/anou-etto'
    | '/lessons/japanese-names-honorifics'
    | '/lessons/minutes'
    | '/lessons/questions-with-ka'
    | '/lessons/saying-you-in-japanese'
    | '/lessons/self-introductions'
    | '/lessons/telling-time'
    | '/lessons/the-no-particle'
    | '/lessons/useful-expressions'
    | '/lessons/x-wa-y-desu'
    | '/lessons/katakana'
    | '/practice/$userID/$deckID'
    | '/learn'
    | '/learn/$textbookId/$chapterSlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/kanji-test'
    | '/lessons'
    | '/pricing'
    | '/settings'
    | '/dashboard'
    | '/grammar-notes'
    | '/guides'
    | '/profile'
    | '/vocab'
    | '/practice/$practiceID'
    | '/practice/all-hiragana-quiz'
    | '/practice/contracted-sounds-quiz'
    | '/practice/dakuten-handakuten-quiz'
    | '/practice/hiragana-quiz'
    | '/practice/review'
    | '/guides/srs'
    | '/practice/conjugation'
    | '/practice/sentence-practice'
    | '/lessons/common-expressions'
    | '/lessons/contracted-sounds'
    | '/lessons/dakuten-handakuten'
    | '/lessons/greetings'
    | '/lessons/hiragana'
    | '/lessons/japanese-pronunciation'
    | '/lessons/long-vowels-paused-consonants'
    | '/lessons/numbers-0-100'
    | '/lessons/punctuation-misc'
    | '/lessons/welcome-overview'
    | '/lessons/writing-systems'
    | '/lessons/anou-etto'
    | '/lessons/japanese-names-honorifics'
    | '/lessons/minutes'
    | '/lessons/questions-with-ka'
    | '/lessons/saying-you-in-japanese'
    | '/lessons/self-introductions'
    | '/lessons/telling-time'
    | '/lessons/the-no-particle'
    | '/lessons/useful-expressions'
    | '/lessons/x-wa-y-desu'
    | '/lessons/katakana'
    | '/practice/$userID/$deckID'
    | '/learn'
    | '/learn/$textbookId/$chapterSlug'
  id:
    | '__root__'
    | '/'
    | '/_home'
    | '/auth'
    | '/kanji-test'
    | '/lessons'
    | '/pricing'
    | '/settings'
    | '/_home/dashboard'
    | '/_home/grammar-notes'
    | '/_home/guides'
    | '/_home/profile'
    | '/_home/vocab'
    | '/practice/$practiceID'
    | '/practice/all-hiragana-quiz'
    | '/practice/contracted-sounds-quiz'
    | '/practice/dakuten-handakuten-quiz'
    | '/practice/hiragana-quiz'
    | '/practice/review'
    | '/_home/guides/srs'
    | '/_home/practice/conjugation'
    | '/_home/practice/sentence-practice'
    | '/lessons/_chapter-0/common-expressions'
    | '/lessons/_chapter-0/contracted-sounds'
    | '/lessons/_chapter-0/dakuten-handakuten'
    | '/lessons/_chapter-0/greetings'
    | '/lessons/_chapter-0/hiragana'
    | '/lessons/_chapter-0/japanese-pronunciation'
    | '/lessons/_chapter-0/long-vowels-paused-consonants'
    | '/lessons/_chapter-0/numbers-0-100'
    | '/lessons/_chapter-0/punctuation-misc'
    | '/lessons/_chapter-0/welcome-overview'
    | '/lessons/_chapter-0/writing-systems'
    | '/lessons/_chapter-1/anou-etto'
    | '/lessons/_chapter-1/japanese-names-honorifics'
    | '/lessons/_chapter-1/minutes'
    | '/lessons/_chapter-1/questions-with-ka'
    | '/lessons/_chapter-1/saying-you-in-japanese'
    | '/lessons/_chapter-1/self-introductions'
    | '/lessons/_chapter-1/telling-time'
    | '/lessons/_chapter-1/the-no-particle'
    | '/lessons/_chapter-1/useful-expressions'
    | '/lessons/_chapter-1/x-wa-y-desu'
    | '/lessons/_chapter-2/katakana'
    | '/practice/$userID/$deckID'
    | '/_home/learn/'
    | '/_home/learn/$textbookId/$chapterSlug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeRoute: typeof HomeRouteWithChildren
  AuthRoute: typeof AuthRoute
  KanjiTestRoute: typeof KanjiTestRoute
  LessonsRoute: typeof LessonsRouteWithChildren
  PricingRoute: typeof PricingRoute
  SettingsRoute: typeof SettingsRoute
  PracticePracticeIDRoute: typeof PracticePracticeIDRoute
  PracticeAllHiraganaQuizRoute: typeof PracticeAllHiraganaQuizRoute
  PracticeContractedSoundsQuizRoute: typeof PracticeContractedSoundsQuizRoute
  PracticeDakutenHandakutenQuizRoute: typeof PracticeDakutenHandakutenQuizRoute
  PracticeHiraganaQuizRoute: typeof PracticeHiraganaQuizRoute
  PracticeReviewRoute: typeof PracticeReviewRoute
  PracticeUserIDDeckIDRoute: typeof PracticeUserIDDeckIDRoute
}
export interface FileServerRoutesByFullPath {
  '/api/hello': typeof ApiHelloServerRoute
  '/api/upload-override': typeof ApiUploadOverrideServerRoute
  '/api/auth/login': typeof ApiAuthLoginServerRoute
  '/api/auth/logout': typeof ApiAuthLogoutServerRoute
}
export interface FileServerRoutesByTo {
  '/api/hello': typeof ApiHelloServerRoute
  '/api/upload-override': typeof ApiUploadOverrideServerRoute
  '/api/auth/login': typeof ApiAuthLoginServerRoute
  '/api/auth/logout': typeof ApiAuthLogoutServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/hello': typeof ApiHelloServerRoute
  '/api/upload-override': typeof ApiUploadOverrideServerRoute
  '/api/auth/login': typeof ApiAuthLoginServerRoute
  '/api/auth/logout': typeof ApiAuthLogoutServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/hello'
    | '/api/upload-override'
    | '/api/auth/login'
    | '/api/auth/logout'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/hello'
    | '/api/upload-override'
    | '/api/auth/login'
    | '/api/auth/logout'
  id:
    | '__root__'
    | '/api/hello'
    | '/api/upload-override'
    | '/api/auth/login'
    | '/api/auth/logout'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiHelloServerRoute: typeof ApiHelloServerRoute
  ApiUploadOverrideServerRoute: typeof ApiUploadOverrideServerRoute
  ApiAuthLoginServerRoute: typeof ApiAuthLoginServerRoute
  ApiAuthLogoutServerRoute: typeof ApiAuthLogoutServerRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lessons': {
      id: '/lessons'
      path: '/lessons'
      fullPath: '/lessons'
      preLoaderRoute: typeof LessonsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kanji-test': {
      id: '/kanji-test'
      path: '/kanji-test'
      fullPath: '/kanji-test'
      preLoaderRoute: typeof KanjiTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/practice/review': {
      id: '/practice/review'
      path: '/practice/review'
      fullPath: '/practice/review'
      preLoaderRoute: typeof PracticeReviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/practice/hiragana-quiz': {
      id: '/practice/hiragana-quiz'
      path: '/practice/hiragana-quiz'
      fullPath: '/practice/hiragana-quiz'
      preLoaderRoute: typeof PracticeHiraganaQuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/practice/dakuten-handakuten-quiz': {
      id: '/practice/dakuten-handakuten-quiz'
      path: '/practice/dakuten-handakuten-quiz'
      fullPath: '/practice/dakuten-handakuten-quiz'
      preLoaderRoute: typeof PracticeDakutenHandakutenQuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/practice/contracted-sounds-quiz': {
      id: '/practice/contracted-sounds-quiz'
      path: '/practice/contracted-sounds-quiz'
      fullPath: '/practice/contracted-sounds-quiz'
      preLoaderRoute: typeof PracticeContractedSoundsQuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/practice/all-hiragana-quiz': {
      id: '/practice/all-hiragana-quiz'
      path: '/practice/all-hiragana-quiz'
      fullPath: '/practice/all-hiragana-quiz'
      preLoaderRoute: typeof PracticeAllHiraganaQuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/practice/$practiceID': {
      id: '/practice/$practiceID'
      path: '/practice/$practiceID'
      fullPath: '/practice/$practiceID'
      preLoaderRoute: typeof PracticePracticeIDRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home/vocab': {
      id: '/_home/vocab'
      path: '/vocab'
      fullPath: '/vocab'
      preLoaderRoute: typeof HomeVocabRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/profile': {
      id: '/_home/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof HomeProfileRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/guides': {
      id: '/_home/guides'
      path: '/guides'
      fullPath: '/guides'
      preLoaderRoute: typeof HomeGuidesRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/grammar-notes': {
      id: '/_home/grammar-notes'
      path: '/grammar-notes'
      fullPath: '/grammar-notes'
      preLoaderRoute: typeof HomeGrammarNotesRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/dashboard': {
      id: '/_home/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof HomeDashboardRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/learn/': {
      id: '/_home/learn/'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof HomeLearnIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/practice/$userID/$deckID': {
      id: '/practice/$userID/$deckID'
      path: '/practice/$userID/$deckID'
      fullPath: '/practice/$userID/$deckID'
      preLoaderRoute: typeof PracticeUserIDDeckIDRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lessons/_chapter-2/katakana': {
      id: '/lessons/_chapter-2/katakana'
      path: '/katakana'
      fullPath: '/lessons/katakana'
      preLoaderRoute: typeof LessonsChapter2KatakanaRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/x-wa-y-desu': {
      id: '/lessons/_chapter-1/x-wa-y-desu'
      path: '/x-wa-y-desu'
      fullPath: '/lessons/x-wa-y-desu'
      preLoaderRoute: typeof LessonsChapter1XWaYDesuRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/useful-expressions': {
      id: '/lessons/_chapter-1/useful-expressions'
      path: '/useful-expressions'
      fullPath: '/lessons/useful-expressions'
      preLoaderRoute: typeof LessonsChapter1UsefulExpressionsRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/the-no-particle': {
      id: '/lessons/_chapter-1/the-no-particle'
      path: '/the-no-particle'
      fullPath: '/lessons/the-no-particle'
      preLoaderRoute: typeof LessonsChapter1TheNoParticleRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/telling-time': {
      id: '/lessons/_chapter-1/telling-time'
      path: '/telling-time'
      fullPath: '/lessons/telling-time'
      preLoaderRoute: typeof LessonsChapter1TellingTimeRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/self-introductions': {
      id: '/lessons/_chapter-1/self-introductions'
      path: '/self-introductions'
      fullPath: '/lessons/self-introductions'
      preLoaderRoute: typeof LessonsChapter1SelfIntroductionsRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/saying-you-in-japanese': {
      id: '/lessons/_chapter-1/saying-you-in-japanese'
      path: '/saying-you-in-japanese'
      fullPath: '/lessons/saying-you-in-japanese'
      preLoaderRoute: typeof LessonsChapter1SayingYouInJapaneseRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/questions-with-ka': {
      id: '/lessons/_chapter-1/questions-with-ka'
      path: '/questions-with-ka'
      fullPath: '/lessons/questions-with-ka'
      preLoaderRoute: typeof LessonsChapter1QuestionsWithKaRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/minutes': {
      id: '/lessons/_chapter-1/minutes'
      path: '/minutes'
      fullPath: '/lessons/minutes'
      preLoaderRoute: typeof LessonsChapter1MinutesRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/japanese-names-honorifics': {
      id: '/lessons/_chapter-1/japanese-names-honorifics'
      path: '/japanese-names-honorifics'
      fullPath: '/lessons/japanese-names-honorifics'
      preLoaderRoute: typeof LessonsChapter1JapaneseNamesHonorificsRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-1/anou-etto': {
      id: '/lessons/_chapter-1/anou-etto'
      path: '/anou-etto'
      fullPath: '/lessons/anou-etto'
      preLoaderRoute: typeof LessonsChapter1AnouEttoRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/writing-systems': {
      id: '/lessons/_chapter-0/writing-systems'
      path: '/writing-systems'
      fullPath: '/lessons/writing-systems'
      preLoaderRoute: typeof LessonsChapter0WritingSystemsRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/welcome-overview': {
      id: '/lessons/_chapter-0/welcome-overview'
      path: '/welcome-overview'
      fullPath: '/lessons/welcome-overview'
      preLoaderRoute: typeof LessonsChapter0WelcomeOverviewRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/punctuation-misc': {
      id: '/lessons/_chapter-0/punctuation-misc'
      path: '/punctuation-misc'
      fullPath: '/lessons/punctuation-misc'
      preLoaderRoute: typeof LessonsChapter0PunctuationMiscRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/numbers-0-100': {
      id: '/lessons/_chapter-0/numbers-0-100'
      path: '/numbers-0-100'
      fullPath: '/lessons/numbers-0-100'
      preLoaderRoute: typeof LessonsChapter0Numbers0100RouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/long-vowels-paused-consonants': {
      id: '/lessons/_chapter-0/long-vowels-paused-consonants'
      path: '/long-vowels-paused-consonants'
      fullPath: '/lessons/long-vowels-paused-consonants'
      preLoaderRoute: typeof LessonsChapter0LongVowelsPausedConsonantsRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/japanese-pronunciation': {
      id: '/lessons/_chapter-0/japanese-pronunciation'
      path: '/japanese-pronunciation'
      fullPath: '/lessons/japanese-pronunciation'
      preLoaderRoute: typeof LessonsChapter0JapanesePronunciationRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/hiragana': {
      id: '/lessons/_chapter-0/hiragana'
      path: '/hiragana'
      fullPath: '/lessons/hiragana'
      preLoaderRoute: typeof LessonsChapter0HiraganaRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/greetings': {
      id: '/lessons/_chapter-0/greetings'
      path: '/greetings'
      fullPath: '/lessons/greetings'
      preLoaderRoute: typeof LessonsChapter0GreetingsRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/dakuten-handakuten': {
      id: '/lessons/_chapter-0/dakuten-handakuten'
      path: '/dakuten-handakuten'
      fullPath: '/lessons/dakuten-handakuten'
      preLoaderRoute: typeof LessonsChapter0DakutenHandakutenRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/contracted-sounds': {
      id: '/lessons/_chapter-0/contracted-sounds'
      path: '/contracted-sounds'
      fullPath: '/lessons/contracted-sounds'
      preLoaderRoute: typeof LessonsChapter0ContractedSoundsRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/lessons/_chapter-0/common-expressions': {
      id: '/lessons/_chapter-0/common-expressions'
      path: '/common-expressions'
      fullPath: '/lessons/common-expressions'
      preLoaderRoute: typeof LessonsChapter0CommonExpressionsRouteImport
      parentRoute: typeof LessonsRoute
    }
    '/_home/practice/sentence-practice': {
      id: '/_home/practice/sentence-practice'
      path: '/practice/sentence-practice'
      fullPath: '/practice/sentence-practice'
      preLoaderRoute: typeof HomePracticeSentencePracticeRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/practice/conjugation': {
      id: '/_home/practice/conjugation'
      path: '/practice/conjugation'
      fullPath: '/practice/conjugation'
      preLoaderRoute: typeof HomePracticeConjugationRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/guides/srs': {
      id: '/_home/guides/srs'
      path: '/srs'
      fullPath: '/guides/srs'
      preLoaderRoute: typeof HomeGuidesSrsRouteImport
      parentRoute: typeof HomeGuidesRoute
    }
    '/_home/learn/$textbookId/$chapterSlug': {
      id: '/_home/learn/$textbookId/$chapterSlug'
      path: '/learn/$textbookId/$chapterSlug'
      fullPath: '/learn/$textbookId/$chapterSlug'
      preLoaderRoute: typeof HomeLearnTextbookIdChapterSlugRouteImport
      parentRoute: typeof HomeRoute
    }
  }
}
declare module '@tanstack/solid-start/server' {
  interface ServerFileRoutesByPath {
    '/api/upload-override': {
      id: '/api/upload-override'
      path: '/api/upload-override'
      fullPath: '/api/upload-override'
      preLoaderRoute: typeof ApiUploadOverrideServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/hello': {
      id: '/api/hello'
      path: '/api/hello'
      fullPath: '/api/hello'
      preLoaderRoute: typeof ApiHelloServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/logout': {
      id: '/api/auth/logout'
      path: '/api/auth/logout'
      fullPath: '/api/auth/logout'
      preLoaderRoute: typeof ApiAuthLogoutServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/login': {
      id: '/api/auth/login'
      path: '/api/auth/login'
      fullPath: '/api/auth/login'
      preLoaderRoute: typeof ApiAuthLoginServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface HomeGuidesRouteChildren {
  HomeGuidesSrsRoute: typeof HomeGuidesSrsRoute
}

const HomeGuidesRouteChildren: HomeGuidesRouteChildren = {
  HomeGuidesSrsRoute: HomeGuidesSrsRoute,
}

const HomeGuidesRouteWithChildren = HomeGuidesRoute._addFileChildren(
  HomeGuidesRouteChildren,
)

interface HomeRouteChildren {
  HomeDashboardRoute: typeof HomeDashboardRoute
  HomeGrammarNotesRoute: typeof HomeGrammarNotesRoute
  HomeGuidesRoute: typeof HomeGuidesRouteWithChildren
  HomeProfileRoute: typeof HomeProfileRoute
  HomeVocabRoute: typeof HomeVocabRoute
  HomePracticeConjugationRoute: typeof HomePracticeConjugationRoute
  HomePracticeSentencePracticeRoute: typeof HomePracticeSentencePracticeRoute
  HomeLearnIndexRoute: typeof HomeLearnIndexRoute
  HomeLearnTextbookIdChapterSlugRoute: typeof HomeLearnTextbookIdChapterSlugRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeDashboardRoute: HomeDashboardRoute,
  HomeGrammarNotesRoute: HomeGrammarNotesRoute,
  HomeGuidesRoute: HomeGuidesRouteWithChildren,
  HomeProfileRoute: HomeProfileRoute,
  HomeVocabRoute: HomeVocabRoute,
  HomePracticeConjugationRoute: HomePracticeConjugationRoute,
  HomePracticeSentencePracticeRoute: HomePracticeSentencePracticeRoute,
  HomeLearnIndexRoute: HomeLearnIndexRoute,
  HomeLearnTextbookIdChapterSlugRoute: HomeLearnTextbookIdChapterSlugRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

interface LessonsRouteChildren {
  LessonsChapter0CommonExpressionsRoute: typeof LessonsChapter0CommonExpressionsRoute
  LessonsChapter0ContractedSoundsRoute: typeof LessonsChapter0ContractedSoundsRoute
  LessonsChapter0DakutenHandakutenRoute: typeof LessonsChapter0DakutenHandakutenRoute
  LessonsChapter0GreetingsRoute: typeof LessonsChapter0GreetingsRoute
  LessonsChapter0HiraganaRoute: typeof LessonsChapter0HiraganaRoute
  LessonsChapter0JapanesePronunciationRoute: typeof LessonsChapter0JapanesePronunciationRoute
  LessonsChapter0LongVowelsPausedConsonantsRoute: typeof LessonsChapter0LongVowelsPausedConsonantsRoute
  LessonsChapter0Numbers0100Route: typeof LessonsChapter0Numbers0100Route
  LessonsChapter0PunctuationMiscRoute: typeof LessonsChapter0PunctuationMiscRoute
  LessonsChapter0WelcomeOverviewRoute: typeof LessonsChapter0WelcomeOverviewRoute
  LessonsChapter0WritingSystemsRoute: typeof LessonsChapter0WritingSystemsRoute
  LessonsChapter1AnouEttoRoute: typeof LessonsChapter1AnouEttoRoute
  LessonsChapter1JapaneseNamesHonorificsRoute: typeof LessonsChapter1JapaneseNamesHonorificsRoute
  LessonsChapter1MinutesRoute: typeof LessonsChapter1MinutesRoute
  LessonsChapter1QuestionsWithKaRoute: typeof LessonsChapter1QuestionsWithKaRoute
  LessonsChapter1SayingYouInJapaneseRoute: typeof LessonsChapter1SayingYouInJapaneseRoute
  LessonsChapter1SelfIntroductionsRoute: typeof LessonsChapter1SelfIntroductionsRoute
  LessonsChapter1TellingTimeRoute: typeof LessonsChapter1TellingTimeRoute
  LessonsChapter1TheNoParticleRoute: typeof LessonsChapter1TheNoParticleRoute
  LessonsChapter1UsefulExpressionsRoute: typeof LessonsChapter1UsefulExpressionsRoute
  LessonsChapter1XWaYDesuRoute: typeof LessonsChapter1XWaYDesuRoute
  LessonsChapter2KatakanaRoute: typeof LessonsChapter2KatakanaRoute
}

const LessonsRouteChildren: LessonsRouteChildren = {
  LessonsChapter0CommonExpressionsRoute: LessonsChapter0CommonExpressionsRoute,
  LessonsChapter0ContractedSoundsRoute: LessonsChapter0ContractedSoundsRoute,
  LessonsChapter0DakutenHandakutenRoute: LessonsChapter0DakutenHandakutenRoute,
  LessonsChapter0GreetingsRoute: LessonsChapter0GreetingsRoute,
  LessonsChapter0HiraganaRoute: LessonsChapter0HiraganaRoute,
  LessonsChapter0JapanesePronunciationRoute:
    LessonsChapter0JapanesePronunciationRoute,
  LessonsChapter0LongVowelsPausedConsonantsRoute:
    LessonsChapter0LongVowelsPausedConsonantsRoute,
  LessonsChapter0Numbers0100Route: LessonsChapter0Numbers0100Route,
  LessonsChapter0PunctuationMiscRoute: LessonsChapter0PunctuationMiscRoute,
  LessonsChapter0WelcomeOverviewRoute: LessonsChapter0WelcomeOverviewRoute,
  LessonsChapter0WritingSystemsRoute: LessonsChapter0WritingSystemsRoute,
  LessonsChapter1AnouEttoRoute: LessonsChapter1AnouEttoRoute,
  LessonsChapter1JapaneseNamesHonorificsRoute:
    LessonsChapter1JapaneseNamesHonorificsRoute,
  LessonsChapter1MinutesRoute: LessonsChapter1MinutesRoute,
  LessonsChapter1QuestionsWithKaRoute: LessonsChapter1QuestionsWithKaRoute,
  LessonsChapter1SayingYouInJapaneseRoute:
    LessonsChapter1SayingYouInJapaneseRoute,
  LessonsChapter1SelfIntroductionsRoute: LessonsChapter1SelfIntroductionsRoute,
  LessonsChapter1TellingTimeRoute: LessonsChapter1TellingTimeRoute,
  LessonsChapter1TheNoParticleRoute: LessonsChapter1TheNoParticleRoute,
  LessonsChapter1UsefulExpressionsRoute: LessonsChapter1UsefulExpressionsRoute,
  LessonsChapter1XWaYDesuRoute: LessonsChapter1XWaYDesuRoute,
  LessonsChapter2KatakanaRoute: LessonsChapter2KatakanaRoute,
}

const LessonsRouteWithChildren =
  LessonsRoute._addFileChildren(LessonsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeRoute: HomeRouteWithChildren,
  AuthRoute: AuthRoute,
  KanjiTestRoute: KanjiTestRoute,
  LessonsRoute: LessonsRouteWithChildren,
  PricingRoute: PricingRoute,
  SettingsRoute: SettingsRoute,
  PracticePracticeIDRoute: PracticePracticeIDRoute,
  PracticeAllHiraganaQuizRoute: PracticeAllHiraganaQuizRoute,
  PracticeContractedSoundsQuizRoute: PracticeContractedSoundsQuizRoute,
  PracticeDakutenHandakutenQuizRoute: PracticeDakutenHandakutenQuizRoute,
  PracticeHiraganaQuizRoute: PracticeHiraganaQuizRoute,
  PracticeReviewRoute: PracticeReviewRoute,
  PracticeUserIDDeckIDRoute: PracticeUserIDDeckIDRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiHelloServerRoute: ApiHelloServerRoute,
  ApiUploadOverrideServerRoute: ApiUploadOverrideServerRoute,
  ApiAuthLoginServerRoute: ApiAuthLoginServerRoute,
  ApiAuthLogoutServerRoute: ApiAuthLogoutServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
